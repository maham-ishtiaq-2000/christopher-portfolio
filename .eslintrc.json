{
    "root": true,
    "overrides": [
        {
            "files": [
                "**/*.ts"
            ],
            "parserOptions": {
                "project": [
                    "/tsconfig.json"
                ],
                "createDefaultProgram": true
            },
            "extends": [
                "google",
                "plugin:@angular-eslint/recommended"
            ],
            "rules": {
                "@angular-eslint/contextual-lifecycle": "error",
                "@angular-eslint/directive-class-suffix": "error",
                "@angular-eslint/no-conflicting-lifecycle": "error",
                "@angular-eslint/no-host-metadata-property": "error",
                "@angular-eslint/no-input-rename": "error",
                "@angular-eslint/no-inputs-metadata-property": "error",
                "@angular-eslint/no-output-native": "error",
                "@angular-eslint/no-output-on-prefix": "error",
                "@angular-eslint/no-output-rename": "error",
                "@angular-eslint/no-outputs-metadata-property": "error",
                "@angular-eslint/use-lifecycle-interface": "error",
                "@angular-eslint/use-pipe-transform-interface": "error",
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "warn",
                    {
                        "type": "element",
                        "prefix": "pnc",
                        "style": "kebab-case"
                    }
                ],
                "@typescript-eslint/adjacent-overload-signatures": "error",
                "@typescript-eslint/array-type": "off",
                "@typescript-eslint/consistent-type-assertions": "error",
                "@typescript-eslint/dot-notation": "off",
                "@typescript-eslint/member-ordering": "error",
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-namespace": "error",
                "@typescript-eslint/no-non-null-assertion": "error",
                "@typescript-eslint/no-parameter-properties": "off",
                "@typescript-eslint/no-unused-expressions": "error",
                "@typescript-eslint/no-use-before-define": "off",
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-function-type": "error",
                "@typescript-eslint/prefer-namespace-keyword": "error",
                "@typescript-eslint/unified-signatures": "error",
                "@typescript-eslint/triple-slash-reference": [
                    "error",
                    {
                        "path": "always",
                        "types": "prefer-import",
                        "lib": "always"
                    }
                ],
                "@typescript-eslint/no-inferrable-types": [
                    "error",
                    {
                        "ignoreParameters": true
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "variable",
                        "modifiers": [
                            "const"
                        ],
                        "format": [
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "memberLike",
                        "modifiers": [
                            "private"
                        ],
                        "format": [
                            "camelCase"
                        ],
                        "leadingUnderscore": "require"
                    },
                    {
                        "selector": "typeParameter",
                        "format": [
                            "PascalCase"
                        ],
                        "prefix": [
                            "T"
                        ]
                    },
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ],
                        "custom": {
                            "regex": "^I[A-Z]",
                            "match": false
                        }
                    },
                    {
                        "selector": [
                            "variable",
                            "function"
                        ],
                        "format": [
                            "camelCase"
                        ],
                        "leadingUnderscore": "allow"
                    }
                ],
                "no-throw-literal": "error",
                "no-undef-init": "error",
                "no-unsafe-finally": "error",
                "no-unused-labels": "error",
                "no-var": "error",
                "object-shorthand": "error",
                "prefer-const": "error",
                "radix": "error",
                "use-isnan": "error",
                "valid-typeof": "off",
                "indent": "off",
                "semi": [
                    "error",
                    "always"
                ],
                "quotes": [
                    "error",
                    "single"
                ],
                "linebreak-style": 0,
                "require-jsdoc": [
                    "error",
                    {
                        "require": {
                            "FunctionDeclaration": true,
                            "MethodDefinition": true,
                            "ClassDeclaration": false,
                            "ArrowFunctionExpression": true,
                            "FunctionExpression": true
                        }
                    }
                ],
                "no-restricted-imports": [
                    "error",
                    {
                        "name": "rxjs/Rx",
                        "message": "Please import directly from 'rxjs' instead"
                    }
                ],
                "new-cap": [
                    "error",
                    {
                        "capIsNew": true,
                        "capIsNewExceptions": [
                            "Directive",
                            "HostBinding",
                            "HostListener",
                            "Injectable",
                            "Input",
                            "NgModule",
                            "Output",
                            "Pipe",
                            "ViewChild",
                            "ViewChildren",
                            "Component"
                        ],
                        "newIsCap": true,
                        "properties": true
                    }
                ],
                "max-len": [
                    "error",
                    {
                        "code": 120,
                        "tabWidth": 2
                    }
                ]
            }
        },
        {
            "files": [
                "*.spec.js"
            ],
            "env": {
                "jasmine": true
            },
            "plugins": [
                "jasmine"
            ],
            "extends": [
                "plugin:jasmine/recommended"
            ],
            "parserOptions": {
                "project": [
                    "/tsconfig.spec.json"
                ],
                "createDefaultProgram": false
            },
            "rules": {
                "quotes": [
                    2,
                    "single"
                ],
                "strict": [
                    2,
                    "global"
                ],
                "semi": [
                    "error",
                    "always"
                ]
            }
        },
        {
            "files": [
                "*.component.html"
            ],
            "parser": "@angular-eslint/template-parser",
            "plugins": ["@angular-eslint/template"],
            "extends": [
                "plugin:@angular-eslint/template/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "rules": {
                "@angular-eslint/template/i18n": [
                    "off",
                    {
                        "checkId": true,
                        "checkText": true,
                        "checkAttributes": false
                    }
                ],
                "@angular-eslint/template/conditional-complexity": [
                    "warn",
                    {
                        "maxComplexity": 10
                    }
                ],
                "@angular-eslint/template/cyclomatic-complexity": [
                    "warn",
                    {
                        "maxComplexity": 10
                    }
                ],
                "@angular-eslint/template/no-positive-tabindex": "warn",
                "@angular-eslint/template/use-track-by-function": "warn",
                "@angular-eslint/template/no-call-expression": 0
            }
        }
    ]
}